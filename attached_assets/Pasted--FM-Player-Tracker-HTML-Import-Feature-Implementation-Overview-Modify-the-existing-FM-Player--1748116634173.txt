# FM Player Tracker - HTML Import Feature Implementation

## Overview
Modify the existing FM Player Tracker to support importing Football Manager HTML export files (like the St Albans squad export.html) alongside the current screenshot functionality.

## Key Requirements

### 1. Add HTML File Upload Option
- Add a new upload option to the main interface: "Upload FM HTML Export" 
- Support both drag-and-drop and click-to-upload for .html files
- Keep the existing screenshot upload functionality intact

### 2. HTML Parser Implementation
Create a server-side HTML parser that:

#### Attribute Mapping
Map the HTML table headers to full attribute names:
```javascript
const attributeMapping = {
  'Acc': 'Acceleration',
  'Wor': 'Work Rate', 
  'Vis': 'Vision',
  'Thr': 'Throwing',
  'Tec': 'Technique',
  'Tea': 'Teamwork',
  'Tck': 'Tackling',
  'Str': 'Strength',
  'Sta': 'Stamina',
  'TRO': 'Tendency to Rush Out',
  'Ref': 'Reflexes',
  'Pun': 'Tendency to Punch',
  'Pos': 'Positioning',
  'Pen': 'Penalty Taking',
  'Pas': 'Passing',
  'Pac': 'Pace',
  '1v1': 'One on Ones',
  'OtB': 'Off the Ball',
  'Nat': 'Natural Fitness',
  'Mar': 'Marking',
  'L Th': 'Long Throws',
  'Lon': 'Long Shots',
  'Ldr': 'Leadership',
  'Kic': 'Kicking',
  'Jum': 'Jumping Reach',
  'Hea': 'Heading',
  'Han': 'Handling',
  'Fre': 'Free Kick Taking',
  'Fla': 'Flair',
  'Fir': 'First Touch',
  'Fin': 'Finishing',
  'Ecc': 'Eccentricity',
  'Dri': 'Dribbling',
  'Det': 'Determination',
  'Dec': 'Decisions',
  'Cro': 'Crossing',
  'Cor': 'Corners',
  'Cnt': 'Concentration',
  'Cmp': 'Composure',
  'Com': 'Communication',
  'Cmd': 'Command of Area',
  'Bra': 'Bravery',
  'Bal': 'Balance',
  'Ant': 'Anticipation',
  'Agi': 'Agility',
  'Agg': 'Aggression',
  'Aer': 'Aerial Reach'
};
```

#### Parser Logic
- Parse HTML table structure
- Extract player data from each row
- Handle different position formats (GK, D(C), M/AM(C), etc.)
- Categorize attributes (Technical, Mental, Physical, Goalkeeping)

### 3. Batch Player Creation
When HTML is uploaded:
- Parse all players from the table
- Create individual player records in the database
- Create initial snapshots for each player with current date
- Store all attribute values in the attributes table
- Show success message with count of players imported

### 4. Enhanced Database Schema
Ensure the existing schema supports:
- Multiple players from single import
- Attribute categorization (Technical/Mental/Physical/Goalkeeping)
- Position data storage

### 5. User Interface Updates

#### Main Upload Area
```html
<div class="upload-options">
  <div class="upload-option">
    <h3>Upload Screenshot</h3>
    <p>Drag & drop or click to upload FM player screenshots</p>
    <input type="file" accept="image/*" id="screenshot-upload">
  </div>
  
  <div class="upload-option">
    <h3>Upload HTML Export</h3>
    <p>Import entire squad from FM HTML export file</p>
    <input type="file" accept=".html" id="html-upload">
  </div>
</div>
```

#### Import Results Display
Show import summary:
- Number of players imported
- Any errors or warnings
- Link to view imported players

### 6. Backend API Endpoints

#### New Endpoint: `/api/import-html`
```javascript
app.post('/api/import-html', upload.single('html'), (req, res) => {
  // Parse HTML file
  // Extract player data
  // Create database records
  // Return import results
});
```

### 7. Error Handling
- Validate HTML file format
- Handle missing attributes gracefully
- Provide meaningful error messages
- Support partial imports if some players fail

### 8. Integration with Existing Features
Ensure imported players work with:
- Player detail views
- Progression tracking (when future snapshots are added)
- Radar charts and visualizations
- Comparison features

## Implementation Priority
1. HTML file upload UI
2. HTML parser with attribute mapping
3. Batch database insertion
4. Integration with existing player views
5. Error handling and validation

## Testing
Test with the provided St Albans squad export.html file to ensure:
- All 24 players are imported correctly
- Attributes are properly mapped and categorized
- Player detail views work as expected
- No conflicts with existing screenshot functionality

## Backward Compatibility
- Keep all existing screenshot upload functionality
- Maintain current database structure
- Ensure existing players continue to work normally

This enhancement will allow users to import entire squads at once while maintaining the existing screenshot-based workflow for individual player tracking over time.