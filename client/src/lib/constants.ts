// Football Manager attribute lists
export const TECHNICAL_ATTRIBUTES = [
  "Corners",
  "Crossing",
  "Dribbling",
  "Finishing",
  "First Touch",
  "Free Kick Taking",
  "Heading",
  "Long Shots",
  "Long Throws",
  "Marking",
  "Passing",
  "Penalty Taking",
  "Tackling",
  "Technique",
];

export const MENTAL_ATTRIBUTES = [
  "Aggression",
  "Anticipation",
  "Bravery",
  "Composure",
  "Concentration",
  "Decisions",
  "Determination",
  "Flair",
  "Leadership",
  "Off The Ball",
  "Positioning",
  "Teamwork",
  "Vision",
  "Work Rate",
];

export const PHYSICAL_ATTRIBUTES = [
  "Acceleration",
  "Agility",
  "Balance",
  "Jumping Reach",
  "Natural Fitness",
  "Pace",
  "Stamina",
  "Strength",
];

// Goalkeeper-specific attributes
export const GOALKEEPER_ATTRIBUTES = [
  "Aerial Reach",
  "Command of Area",
  "Communication",
  "Eccentricity",
  "Handling",
  "Kicking",
  "One on Ones",
  "Reflexes",
  "Rushing Out",
  "Tendency to Punch",
  "Throwing",
];

// Common FM positions
export const FM_POSITIONS = [
  { code: "GK", name: "Goalkeeper", category: "Goalkeeper" },
  { code: "SW(S)", name: "Sweeper (Support)", category: "Defender" },
  { code: "SW(A)", name: "Sweeper (Attack)", category: "Defender" },
  { code: "CB(D)", name: "Centre Back (Defend)", category: "Defender" },
  { code: "CB(S)", name: "Centre Back (Support)", category: "Defender" },
  { code: "CB(C)", name: "Centre Back (Cover)", category: "Defender" },
  { code: "BPD(D)", name: "Ball Playing Defender (Defend)", category: "Defender" },
  { code: "BPD(S)", name: "Ball Playing Defender (Support)", category: "Defender" },
  { code: "L(D)", name: "Libero (Defend)", category: "Defender" },
  { code: "L(S)", name: "Libero (Support)", category: "Defender" },
  { code: "FB(D)", name: "Full Back (Defend)", category: "Defender" },
  { code: "FB(S)", name: "Full Back (Support)", category: "Defender" },
  { code: "FB(A)", name: "Full Back (Attack)", category: "Defender" },
  { code: "WB(S)", name: "Wing Back (Support)", category: "Defender" },
  { code: "WB(A)", name: "Wing Back (Attack)", category: "Defender" },
  { code: "CWB(S)", name: "Complete Wing Back (Support)", category: "Defender" },
  { code: "CWB(A)", name: "Complete Wing Back (Attack)", category: "Defender" },
  { code: "IWB(D)", name: "Inverted Wing Back (Defend)", category: "Defender" },
  { code: "IWB(S)", name: "Inverted Wing Back (Support)", category: "Defender" },
  { code: "NFB(D)", name: "No-Nonsense Full Back (Defend)", category: "Defender" },
  // Midfielders
  { code: "DM(D)", name: "Defensive Midfielder (Defend)", category: "Midfielder" },
  { code: "DM(S)", name: "Defensive Midfielder (Support)", category: "Midfielder" },
  { code: "BWM(D)", name: "Ball Winning Midfielder (Defend)", category: "Midfielder" },
  { code: "BWM(S)", name: "Ball Winning Midfielder (Support)", category: "Midfielder" },
  { code: "A(D)", name: "Anchor (Defend)", category: "Midfielder" },
  { code: "HB(D)", name: "Half Back (Defend)", category: "Midfielder" },
  { code: "DLP(D)", name: "Deep Lying Playmaker (Defend)", category: "Midfielder" },
  { code: "DLP(S)", name: "Deep Lying Playmaker (Support)", category: "Midfielder" },
  { code: "RP(S)", name: "Regista (Support)", category: "Midfielder" },
  { code: "CM(D)", name: "Central Midfielder (Defend)", category: "Midfielder" },
  { code: "CM(S)", name: "Central Midfielder (Support)", category: "Midfielder" },
  { code: "CM(A)", name: "Central Midfielder (Attack)", category: "Midfielder" },
  { code: "BBM(S)", name: "Box to Box Midfielder (Support)", category: "Midfielder" },
  { code: "CAR(S)", name: "Carrilero (Support)", category: "Midfielder" },
  { code: "VOL(S)", name: "Volante (Support)", category: "Midfielder" },
  { code: "VOL(A)", name: "Volante (Attack)", category: "Midfielder" },
  { code: "MEZ(S)", name: "Mezzala (Support)", category: "Midfielder" },
  { code: "MEZ(A)", name: "Mezzala (Attack)", category: "Midfielder" },
  { code: "AP(S)", name: "Advanced Playmaker (Support)", category: "Midfielder" },
  { code: "AP(A)", name: "Advanced Playmaker (Attack)", category: "Midfielder" },
  { code: "AM(S)", name: "Attacking Midfielder (Support)", category: "Midfielder" },
  { code: "AM(A)", name: "Attacking Midfielder (Attack)", category: "Midfielder" },
  { code: "ENG(S)", name: "Enganche (Support)", category: "Midfielder" },
  { code: "SS(A)", name: "Shadow Striker (Attack)", category: "Midfielder" },
  // Wingers
  { code: "WM(D)", name: "Wide Midfielder (Defend)", category: "Winger" },
  { code: "WM(S)", name: "Wide Midfielder (Support)", category: "Winger" },
  { code: "WM(A)", name: "Wide Midfielder (Attack)", category: "Winger" },
  { code: "W(S)", name: "Winger (Support)", category: "Winger" },
  { code: "W(A)", name: "Winger (Attack)", category: "Winger" },
  { code: "IF(S)", name: "Inside Forward (Support)", category: "Winger" },
  { code: "IF(A)", name: "Inside Forward (Attack)", category: "Winger" },
  { code: "RMD(S)", name: "Raumdeuter (Support)", category: "Winger" },
  { code: "RMD(A)", name: "Raumdeuter (Attack)", category: "Winger" },
  { code: "IW(S)", name: "Inverted Winger (Support)", category: "Winger" },
  { code: "IW(A)", name: "Inverted Winger (Attack)", category: "Winger" },
  // Strikers
  { code: "DLF(S)", name: "Deep Lying Forward (Support)", category: "Striker" },
  { code: "DLF(A)", name: "Deep Lying Forward (Attack)", category: "Striker" },
  { code: "F9(S)", name: "False 9 (Support)", category: "Striker" },
  { code: "CF(S)", name: "Complete Forward (Support)", category: "Striker" },
  { code: "CF(A)", name: "Complete Forward (Attack)", category: "Striker" },
  { code: "AF(A)", name: "Advanced Forward (Attack)", category: "Striker" },
  { code: "P(A)", name: "Poacher (Attack)", category: "Striker" },
  { code: "TM(S)", name: "Target Man (Support)", category: "Striker" },
  { code: "TM(A)", name: "Target Man (Attack)", category: "Striker" },
  { code: "PF(S)", name: "Pressing Forward (Support)", category: "Striker" },
  { code: "PF(A)", name: "Pressing Forward (Attack)", category: "Striker" },
];

// Common formations
export const FM_FORMATIONS = [
  "4-4-2",
  "4-4-1-1",
  "4-2-3-1",
  "4-3-3",
  "4-1-4-1",
  "4-5-1",
  "3-5-2",
  "3-4-3",
  "5-4-1",
  "5-3-2",
  "4-1-2-1-2",
  "4-3-1-2",
];

// Attribute quality thresholds
export const ATTRIBUTE_THRESHOLDS = {
  EXCELLENT: 15,
  GOOD: 12,
  AVERAGE: 8,
  POOR: 0,
} as const;
